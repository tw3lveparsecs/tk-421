name: Aad-Integration-CI

# Controls when the workflow will run
on:  
  push:
    branches: [ feature/aad-integration ]
#   pull_request:
#     branches: [ main ]

  workflow_dispatch:

jobs:
  build:    
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.THOR_AZURE_CREDENTIALS }}
          enable-AzPSSession: $true

      - name: Set variables
        run: |
          AZURE_TOKEN=$(az account get-access-token --resource-type ms-graph --query accessToken --output tsv)
          export AZURE_TENANTDOMAIN=$(curl -s --header "Authorization: Bearer ${AZURE_TOKEN}" --request GET 'https://graph.microsoft.com/v1.0/domains' | jq -r '.value[] | select(.isDefault == true) | {id}[]')
          export AZURE_TENANTID=$(az account show --query tenantId -o tsv)                                        
      
      - name: Create users (echo)
        run: |                 
          OLDIFS=$IFS   
          IFS=$'\n'
          for row in $(jq -c '.[]' .github/variables/aad/aksusers.json); do
              _jq() {
                echo ${row} | jq -r ${1}
              }
            echo az ad group create --display-name "$(_jq '.displayName')" --mail-nickname "$(_jq '.userPrincipalName')" --description "$(_jq '.description')" --query objectId -o tsv
            echo $(_jq '.displayName') $(_jq '.userPrincipalName') $(_jq '.description')
          done
          IFS=$OLDIFS


      # - name: Run Azure PowerShell script
      #   uses: azure/powershell@v1
      #   with:
      #     azPSVersion: 'latest'
      #     inlineScript: |
      #       Get-AzContext