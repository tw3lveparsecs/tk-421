name: Generate Certificates

on: 
  workflow_dispatch:
    inputs:  
      # domain_name:
      #   description: 'Domain name used for public facing certificate. E.g. contoso.com'
      #   required: true
      #   type: string
      #   default: ajlab.com
      # azure_credentials:
      #   description: 'Name of GitHub secret containing Azure credential used to store certificates in key vault.'
      #   required: true
      #   type: string
      #   default: "AJ_AZURE_CREDENTIALS"
      # keyVaultName:
      #   description: 'Name of Azure Key Vault where certificates will be stored.'
      #   required: true
        # type: string   
        # default: 'tempajb01'  
      # variable_path:
      #   description: 'Directory or file path to variables used in GitHub workflows.'
      #   required: false
      #   default: ./.github/variables/*   

env:
  public_cert_name: "tk421Public"
  ingress_cert_name: "tk421Ingress"
  TEST2: ${{ inputs.keyvaultname }}

jobs:
  deploy:     
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Set Environment Variables
        run: |
          echo ${{ inputs.keyvaultname }}
          echo $TEST
          # echo ${{ inputs.key_vault_name }} 
          # echo AZURE_CREDENTIALS=$CREDENTIALS >> $GITHUB_ENV        
        env:
          TEST: ${{ inputs.keyvaultname }}
                 

      # - name: Login to Azure
      #   uses: azure/login@v1.1
      #   with:
      #     creds: ${{ secrets[env.AZURE_CREDENTIALS] }}

      # - name: Create certificates & add to Key Vault
      #   uses: Azure/cli@1.0.4
      #   with:
      #     inlineScript: |          
      #       cd $RUNNER_TEMP
      #       # public cert
      #       openssl req -x509 -nodes -days 365 -newkey rsa:2048 -out public_cert.crt -keyout public_cert.key -subj "/CN=tk421.${DOMAIN_NAME}/O=tk421" -addext "subjectAltName = DNS:tk421.${DOMAIN_NAME}" -addext "keyUsage = digitalSignature" -addext "extendedKeyUsage = serverAuth"
      #       openssl pkcs12 -export -out public_cert.pfx -in public_cert.crt -inkey public_cert.key -passout pass:            
            
      #       # ingress controller cert
      #       openssl req -x509 -nodes -days 365 -newkey rsa:2048 -out traefik-ingress-internal-aks-ingress-tls.crt -keyout traefik-ingress-internal-aks-ingress-tls.key -subj "/CN=*.aks-ingress.${DOMAIN_NAME}/O=TK421 AKS Ingress"            
      #       openssl pkcs12 -export -out traefik-ingress-internal-aks-ingress-tls.pfx -in traefik-ingress-internal-aks-ingress-tls.crt -inkey traefik-ingress-internal-aks-ingress-tls.key -passout pass:                                   
            
      #       az keyvault certificate import --name $PUBLIC_CERT --file public_cert.pfx --vault-name $KEY_VAULT
      #       az keyvault certificate import --name $INGRESS_CERT --file traefik-ingress-internal-aks-ingress-tls.pfx --vault-name $KEY_VAULT                    
      #   env:
      #     DOMAIN_NAME: ${{ inputs.domain_name }}
      #     KEY_VAULT: ${{ inputs.key_vault_name }}        
      #     PUBLIC_CERT: ${{ inputs. public_cert_name }}
      #     INGRESS_CERT: ${{ inputs. ingress_cert_name }}          
          
