name: Aad-Integration-CI

# Controls when the workflow will run
on:
  push:
    branches: [ feature/aad-integration ]
#   pull_request:
#     branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.THOR_AZURE_CREDENTIALS }}
          enable-AzPSSession: $true

      - name: Set variables
        run: |
          AZURE_TOKEN=$(az account get-access-token --resource-type ms-graph --query accessToken --output tsv)
          export AZURE_TENANTDOMAIN=$(curl -s --header "Authorization: Bearer ${AZURE_TOKEN}" --request GET 'https://graph.microsoft.com/v1.0/domains' | jq -r '.value[] | select(.isDefault == true) | {id}[]')
          echo "AZURE_TENANTDOMAIN=${AZURE_TENANTDOMAIN}" >> $GITHUB_ENV
          export AZURE_TENANTID=$(az account show --query tenantId -o tsv)
          echo "AZURE_TENANTID=${AZURE_TENANTID}" >> $GITHUB_ENV

      - name: Create aks groups
        run: |
          OLDIFS=$IFS
          IFS=$'\n'
          for row in $(jq -c '(.groups | .[])' .github/variables/aad/aad.json); do
              _jq() {
                echo ${row} | jq -r ${1}
              }
              echo Creating group "$(_jq '.displayname')"
              if [[ $(az ad group list --query "[?mailNickname=='$(_jq '.displayname')'].{mailNickname:mailNickname}" -o tsv) ]]; then
                echo "$(_jq '.displayname') Group exists"
              else
                az ad group create --display-name "$(_jq '.displayname')" --mail-nickname "$(_jq '.mailnickname')" --description "$(_jq '.description')" --query objectId -o tsv
              fi
          done
          IFS=$OLDIFS

      - name: Create aks users
        run: |
          export vaultname=$(jq '.vaultname' .github/variables/keyvault/keyvault.json)
          export resourcegroup=$(jq '.vaultname' .github/variables/keyvault/keyvault.json)
          OLDIFS=$IFS
          IFS=$'\n'
          for row in $(jq -c '(.users | .[])' .github/variables/aad/aad.json); do
              _jq() {
                echo ${row} | jq -r ${1}
              }
              if [[ $(az ad user list --query "[?displayName=='$(_jq '.displayname')'].{displayName:displayName}" -o tsv) ]]; then
                if [[ ! $(az ad user get-member-groups --id "$(_jq '.userprincipalname')@${{ env.AZURE_TENANTDOMAIN }}" --query "[?displayName=='$(_jq '.memberof')'].{displayName:displayName}" -o tsv) ]]; then
                  echo ""
                else
                  adduser=true
                fi
              else
                pw=$(date +%s | md5sum | base64 | head -c 32 ; echo)
                objectid=$(az ad user create --display-name "$(_jq '.displayname')" --user-principal-name "$(_jq '.userprincipalname')@${{ env.AZURE_TENANTDOMAIN }}" --password "${PW}" --query objectId -o tsv)
                if [[ ! $(az keyvault secret show --name "$(_jq '.displayname')" --vault-name "${vaultname}" --query "value" 2>/dev/null) ]]; then
                  az keyvault secret set --vault-name "${vaultname}" --name "$(_jq '.displayname')" --value "${pw}"
                fi
                adduser=true
              fi
              if [[ ! -z "$adduser" ]]; then
                az ad group member add -g "$(_jq '.memberof')" --member-id "$(_jq '.userprincipalname')@${{ env.AZURE_TENANTDOMAIN }}"
              fi
          done
          IFS=$OLDIFS