name: Aad-Integration-CI

# Controls when the workflow will run
on:
  push:
    branches: [ feature/aad-integration ]
#   pull_request:
#     branches: [ main ]

  workflow_dispatch:

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - id: group-matrix
        run: |
          $groups = (get-content -path .github/variables/aad/aksgroups.json | convertfrom-json | convertto-json -Compress)
          Write-Host "::set-output name=groupmatrix::$groups"
        shell: pwsh

    outputs:
      groupmatrix: ${{ steps.group-matrix.outputs.groupmatrix }}

  build:
    needs: set-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        group: ${{fromJSON(needs.set-matrix.outputs.groupmatrix)}}

    steps:
      - uses: actions/checkout@v2

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.THOR_AZURE_CREDENTIALS }}
          enable-AzPSSession: $true

      - name: Set variables
        run: |
          AZURE_TOKEN=$(az account get-access-token --resource-type ms-graph --query accessToken --output tsv)
          export AZURE_TENANTDOMAIN=$(curl -s --header "Authorization: Bearer ${AZURE_TOKEN}" --request GET 'https://graph.microsoft.com/v1.0/domains' | jq -r '.value[] | select(.isDefault == true) | {id}[]')
          echo "AZURE_TENANTDOMAIN=${AZURE_TENANTDOMAIN}" >> $GITHUB_ENV
          export AZURE_TENANTID=$(az account show --query tenantId -o tsv)
          echo "AZURE_TENANTID=${AZURE_TENANTID}" >> $GITHUB_ENV


      - name: Create aks groups
        run: |
          echo ${{ matrix.group.groupdisplayname }}
          echo ${{ matrix.group.groupmailnickname }}
          echo ${{ matrix.group.groupdescription }}
          echo ${{ matrix.group.users }} | jq


